I"L<p><strong>Abstract:</strong></p>

<p>In this tutorial blog, we’ll prove the correctness of the method animated above in a general setting. Elaborate on how we can use it to sample from the multi-variate Gaussian (MVN). Finally, we will discuss a practical approach and illustrate it with some code snippets from the Scipy and Numpy.</p>

<p><strong>Outline:</strong></p>

<ol>
  <li><a href="#1">Correctness: The transformation Law</a>
Anything below is still in TO-DO
    <ol>
      <li><a href="#11">Generating the exponential law from the uniform distribution</a></li>
    </ol>
  </li>
  <li><a href="#2">MVN case: Normal x Normal = Normal</a></li>
  <li><a href="#3">Practical implementation:</a>
    <ol>
      <li><a href="#31">Cholsky decomposition</a></li>
      <li><a href="#32">Open Source</a></li>
    </ol>
  </li>
</ol>

<hr />

<p><strong>Notation:</strong></p>

<p>If \(X\) is a random variable (RV), we’ll use \(F_X\)  to denote its commutative distribution function (CDF) and \(f_X\) for its density function.</p>

<p><strong>Sketch:</strong></p>

<p>Put in simple terms, if \(F_N^{-1}\) is the reverse of the CDF \(F_N\) of the standard normal distribution and \(U\) is a uniformely distributed RV on the interval \([0,1]\). The animation above claims that \(F_N^{-1}(U)\) is normally distributed.</p>

<p><strong>Proof:</strong></p>

<p>Let’s define the RV \(Y\) as  \(Y = F_N^{-1}(U)\)  and let’s prove that \(Y = N(0,1)\)</p>

<p>For \(y\) in \(R\) :</p>

\[\begin{align*}
F_Y(y) &amp;= P(Y&lt;y) \\
&amp;= P(F_N^{-1}(U) &lt; y) \\
&amp;= P(U &lt; F_N(y)) \\
&amp;= F_N(y)
\end{align*}\]

<p>Where the third equality follows from the fact that \(F_N^{-1}\) is strictly increasing on the range \([0,1]\)</p>

<p>Since the CDF completely determines a distribution, we conclude that \(Y\) is equal to \(N\), which completes our proof.</p>
:ET